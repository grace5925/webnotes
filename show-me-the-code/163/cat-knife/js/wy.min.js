//屏蔽ios下上下弹性
$(window).on('scroll.elasticity', function (e) {e.preventDefault();}).on('touchmove.elasticity', function (e) {e.preventDefault();});
var arrId=0;
var canvas = document.getElementById("ourCanvas");
var width = $(window).width(); //获取dom 宽度
var height = $(window).height(); //获取dom 高度
var scale= 2;
var Dom={
    preload:$(".preload"),
    finishBtn:$(".finish-btn"),
    midLogo:$(".icon_logo"),
    footWrap:$('.foot-wrap'),
    drawWarp:  $("#drawWarp"),
    saveTishi:$(".save-tishi"),
    percent:$(".percent")
};
var downheight,ishide=false;
var baseUrl ='', imgindex= 0;
fileList=[
    baseUrl + 'assets/bg.png?20',
    baseUrl + 'assets/Room.jpg',
    baseUrl + 'assets/icon_ui/back_btn.png?20',
    baseUrl + 'assets/icon_ui/foot_logo.jpg',
    baseUrl + 'assets/icon_ui/hand.gif',
    baseUrl + 'assets/icon_ui/icon_camera.png?20',
    baseUrl + 'assets/icon_ui/icon_typebtn.png?20',
    baseUrl + 'assets/icon_ui/remove.e80f2.png?20',
    baseUrl + 'assets/icon_ui/resize.65162.png?20',
    baseUrl + 'assets/icon_ui/share_btn.png?20',
    baseUrl + 'assets/icon_ui/start.png?20',
    baseUrl + 'assets/icon_ui/unfold.png?20',
    baseUrl + 'assets/icon_desk/desk1.png?20',
    baseUrl + 'assets/icon_desk/desk2.png?20',
    baseUrl + 'assets/icon_desk/desk3.png?20',
    baseUrl + 'assets/icon_computer/comp1.png?24',
    baseUrl + 'assets/icon_computer/comp2.png?24',
    baseUrl + 'assets/icon_computer/comp4.png?24',
    baseUrl + 'assets/icon_computer/book2.png?20',
    baseUrl + 'assets/icon_computer/file1.png?20',
    baseUrl + 'assets/icon_computer/file2.png?20',
    baseUrl + 'assets/icon_computer/note.png?20',
    baseUrl + 'assets/icon_computer/shelf.png?20',
    baseUrl + 'assets/icon_computer/window.png?20',
    baseUrl + 'assets/icon_computer/window2.png?20',
    baseUrl + 'assets/icon_computer/window3.png?20',
	baseUrl + 'assets/icon_computer/taideng.png?20',
    baseUrl + 'assets/icon_computer/rili.png?20',

    baseUrl + 'assets/icon_paper/paper1.png?20',
    baseUrl + 'assets/icon_paper/paper2.png?20',
    baseUrl + 'assets/icon_paper/paper3.png?20',
    baseUrl + 'assets/icon_paper/paper4.png?20',
    baseUrl + 'assets/icon_paper/paper5.png?20',
    baseUrl + 'assets/icon_paper/paper6.png?20',
    baseUrl + 'assets/icon_paper/paper7.png?20',
    baseUrl + 'assets/icon_paper/paper8.png?20',
	baseUrl + 'assets/icon_paper/paper9.png?20',
    baseUrl + 'assets/icon_paper/paper10.png?20',
    baseUrl + 'assets/icon_paper/paper11.png?20',
	baseUrl + 'assets/icon_paper/paper20.png?21',
    baseUrl + 'assets/icon_paper/paper21.png?21',

    baseUrl + 'assets/icon_dog/cat1.png?20',
    baseUrl + 'assets/icon_dog/cat2.png?20',
    baseUrl + 'assets/icon_dog/cat3.png?20',
    baseUrl + 'assets/icon_dog/cat4.png?20',
    baseUrl + 'assets/icon_dog/cat5.png?20',
    baseUrl + 'assets/icon_dog/dog1.png?20',
    baseUrl + 'assets/icon_dog/dog2.png?20',
    baseUrl + 'assets/icon_dog/dog3.png?20',
    baseUrl + 'assets/icon_dog/dog4.png?20',
    baseUrl + 'assets/icon_dog/dog5.png?20',

    baseUrl + 'assets/icon_official/book1.png?20',
    baseUrl + 'assets/icon_official/noodles.png?20',
    baseUrl + 'assets/icon_official/oil.png?20',
    baseUrl + 'assets/icon_official/pot.png?20',
    baseUrl + 'assets/icon_official/erji.png?21',
    baseUrl + 'assets/icon_official/book.png?20',
    baseUrl + 'assets/icon_official/drink.png?20',
    baseUrl + 'assets/icon_official/duck.png?20',
    baseUrl + 'assets/icon_official/knife.png?20',
    baseUrl + 'assets/icon_official/flower.png?20',
    baseUrl + 'assets/icon_official/toy3.png?20',
    baseUrl + 'assets/icon_official/zawu.png?20',
    baseUrl + 'assets/icon_official/carmodel.png?20',
	baseUrl + 'assets/icon_official/baowenbei.png?20',
    baseUrl + 'assets/icon_official/biao.png?20',
    baseUrl + 'assets/icon_official/jiashiqi.png?20',

    baseUrl + 'assets/icon_live/bottol1.png?20',
    baseUrl + 'assets/icon_live/bottol2.png?20',
    baseUrl + 'assets/icon_live/bottol3.png?20',
    baseUrl + 'assets/icon_live/dumbbell.png?20',
    baseUrl + 'assets/icon_live/game.png?20',
    baseUrl + 'assets/icon_live/lipstick.png?20',
    baseUrl + 'assets/icon_live/mirror.png?20',
    baseUrl + 'assets/icon_live/plant1.png?20',
    baseUrl + 'assets/icon_live/plant2.png?20',
    baseUrl + 'assets/icon_live/plant3.png?20',
    baseUrl + 'assets/icon_live/toys.png?20',
    baseUrl + 'assets/icon_live/shoes1.png?20',
    baseUrl + 'assets/icon_live/shoes2.png?20'
];


function loadImage(imgIndex){
    var img = new Image();
    img.src = fileList[imgIndex];
    var percent = parseInt(imgIndex/fileList.length *100);
    img.onload = function () {
        imgIndex++;
        Dom.percent.html(percent+"%");
        if(imgIndex < fileList.length){
            loadImage(imgIndex);
        }else{
            Dom.percent.html("100%");
            setTimeout(function(){
                Dom.percent.hide();
                $(".start-btn").show();
                InitCanvas();
            },400);
        }
    }
}
window.onload=function(){
    loadImage(imgindex);
    if($(window).height() >= 720){
        downheight=parseInt($(".tabs-wrap").height()-$(".foot-wrap").height())+25;
    }else{
        downheight=parseInt($(".tabs-wrap").height()-$(".foot-wrap").height());
    }

    $(".start-btn")[0].addEventListener("webkitAnimationEnd",function(){
        $(this).removeClass("fadeInUp").addClass("clickAni");
    });

    var myScroll1  = new IScroll('#wrapper1', {
        mouseWheel: true,
        useTransition: false,
        click: true
    });
    var myScroll2 = new IScroll('#wrapper2', {
        mouseWheel: true,
        useTransition: false,
        click: true
    });
    var myScroll3  = new IScroll('#wrapper3', {
        mouseWheel: true,
        useTransition: false,
        click: true
    });
    var myScroll4 = new IScroll('#wrapper4', {
        mouseWheel: true,
        useTransition: false,
        click: true
    });
    var myScroll5 = new IScroll('#wrapper5', {
        mouseWheel: true,
        useTransition: false,
        click: true
    });
    var myScroll6 = new IScroll('#wrapper6', {
        mouseWheel: true,
        useTransition: false,
        click: true
    });
};
// 点击  开始
$(".start-btn").on("touchend",function () {
    $("#wrapper2,#wrapper3,#wrapper4,#wrapper5,#wrapper6").hide();
    Dom.preload.addClass("fadeOut");
    Dom.preload[0].addEventListener('webkitAnimationEnd',function(){
        $(this).remove();
    });
});
var spriteUrl='icon_desk';

//类别选择
$(".type").click(function(){
    $(this).addClass("curr").siblings().removeClass("curr");
    $(".scroll-wrap").hide().eq($(this).index()).show();
    $(".hand_tishi").hide();
    //removeBorder();
    spriteUrl = $(this).attr("data-url");
    //展开面板
    if($(".close-tabs").hasClass("down")){
        $(".close-tabs").removeClass("down");
        Dom.footWrap.css("bottom","0");
        Dom.finishBtn.hide();
        Dom.midLogo.hide();
    }
});
// 收起 选择面板
$(".close-tabs").click(function(){
    //removeBorder();
    $(".hand_tishi").hide();
    if($(this).hasClass("down")){
        $(this).removeClass("down");
        Dom.footWrap.css("bottom","0");
        Dom.finishBtn.hide();
        Dom.midLogo.hide();
    }else{
        $(this).addClass("down");
        Dom.finishBtn.show();
        Dom.midLogo.show();
        Dom.footWrap.css("bottom",downheight+"px");
    }
});
// 点击元素之外其他地方，隐藏 元素的外框和删除按钮
$(".roombg").on("touchstart",function(ev){
    removeBorder();
    //console.log(ev.target.className);
});

//添加 元素
$(".scroller li").on("click",function(){
    var ZIndex= $(this).attr("data-zindex");
    var spriteID = $(this).attr("data-id");
    if(spriteUrl == 'icon_desk'){
        var _newdesk='<img src="assets/icon_desk/desk'+($(this).index()+1)+'.png?20">';
        $(".roombg").html('').append(_newdesk);
    }else{
        removeBorder();
        addIconToRoom(spriteUrl,spriteID,ZIndex);
        arrId++;
    }
    //console.log(spriteID);

    $(".hand_tishi").hide();
});
$(document).on('touchstart', '.img_box', function(){
    removeBorder();
    $(this).addClass("border-outer");
});

//删掉 元素
$(document).on("touchend",'.remove-btn',function(ev){
    ev.stopPropagation();
    $(this).parent(".img_box").remove();
    arrId--;
});

//完成事件
$(".finish-btn").on("touchend",function(){
    removeBorder();
    $(".finish-btn,.foot-wrap").hide();
    $(".foot-share img").show();
    $(".save-tishi").show();
    setTimeout(function(){
        html2canvas($("#wrap")[0], {
            scale: scale, // 添加的scale 参数
            canvas: canvas, //自定义 canvas
            width: width, //dom 原始宽度
            height: height,
            useCORS: true // 【重要】开启跨域配置
        }).then(function (canvas) {
            imgData = canvas.toDataURL("image/jpg");
            $("#finalDesk").attr("src",imgData);
            showEndPage();
        });
    },300);
});

//返回修改
$(".back-btn").on("touchend",function(){
    Dom.drawWarp.show();
    $(".finish-btn,.foot-wrap").show();
    $(".foot-share img,.end-page,.save-tishi").hide();
    $("#finalDesk").attr("src",'');
    var ctx=canvas.getContext("2d");
    ctx.clearRect(0,0,canvas.width,canvas.height);

});

//
$(".link-btn").on("touchend",function(){
    window.location.href='https://study.163.com/topics/xinrenlibao_m/?utm_source=h5&utm_medium=bottom2&utm_campaign=spring2018';

});



function showEndPage(){
    setTimeout(function(){
        $(".end-page").show();
        $("body").removeClass("noselect");
        $(".back-btn")[0].addEventListener("webkitAnimationEnd",function(){
            $(".back-btn,.link-btn").removeClass("bounceIn").addClass("clickAni");
        });
    },300);
}
function InitCanvas(){
    canvas.width =width * scale;
    canvas.height = height * scale;
    canvas.style.width = width + "px";
    canvas.style.height = height + "px";
    var context = canvas.getContext("2d");
    context.scale(scale,scale);//然后将画布缩放，将图像放大两倍画到画布上
}

function addIconToRoom(spriteurl,spriteid,zindex){
    var _src="assets/"+spriteurl+"/"+spriteid;
    var _imgId = spriteurl+arrId;
    var _str='<p id="'+_imgId+'" class="img_box border-outer '+zindex+'"><i class="remove-btn"></i><i class="icon_scale"></i><img src='+ _src +'></p>';
    var _tishi='<img src="assets/icon_ui/hand.gif" id="icon_hand" style="position: absolute;width:2.4rem;left:50%;margin-left:-1.2rem;top: 46%;z-index: 999; ">';

    var _newImg = new Image();
    _newImg.src= _src;
    _newImg.onload=function(){
        $("#drawWarp").append(_str);
        if(!ishide){
            $("#drawWarp").append(_tishi);
            ishide=true;
            setTimeout(function(){
                document.getElementById('icon_hand').style.display="none";
            },1500);
        }
        var el = document.getElementById(_imgId);
        var pwidth= _newImg.width/40,
            pheight =_newImg.height/40;

        if( spriteid == 'comp1.png?24' || spriteid == 'comp2.png?24' || spriteid == 'comp4.png?24'){
            pwidth = _newImg.width/60;
            pheight = _newImg.height/60;
        }
        $(document).find("#"+_imgId).css({
            "opacity": 1,
            "width":pwidth+"rem",
            "height":pheight+"rem",
            "marginLeft":pwidth * -0.5+"rem",
            "marginTop": pheight * -0.5+"rem"
        });

        setTimeout(function(){
            Transform(el);
            var initScale = 1;
            var gesture = new AlloyFinger(el, {
                rotate: function (evt) {
                    //el.rotateZ += evt.angle;
                },
                pinchStart: function () {
                    initScale = el.scaleX;
                    //var ozIndex = el.getAttribute("z-index");
                    //el.style.zIndex = parseInt(ozIndex)+1;
                },
                pinch: function (evt) {
                    el.scaleX = el.scaleY = initScale * evt.zoom;
                },
                pressMove: function (evt) {
                    el.translateX += evt.deltaX;
                    el.translateY += evt.deltaY;
                },
                tap: function (evt) {
                    //console.log(el.scaleX + "_" + el.scaleY + "_" + el.rotateZ + "_" + el.translateX + "_" + el.translateY);
                    //console.log("tap");
                },
                doubleTap: function (evt) {
                    /*if(el.scaleX===1){
                     new To(el, "scaleX", 2, 500, ease);
                     new To(el, "scaleY", 2, 500, ease);
                     }else if(el.scaleX===2){
                     new To(el, "scaleX", 1, 500, ease);
                     new To(el, "scaleY", 1, 500, ease);
                     }*/
                },
                longTap: function (evt) {
                    //console.log("longTap");
                },
                swipe: function (evt) {
                    //console.log("swipe" + evt.direction);
                }
            });
        },300);
    }
}

function ease(x) {
    return Math.sqrt(1 - Math.pow(x - 1, 2));
}
function removeBorder(){
    $(document).find(".img_box").removeClass("border-outer");
}




/* AlloyFinger v0.1.10
 * By dntzhang
 * Github: https://github.com/AlloyTeam/AlloyFinger
 */
; (function () {
    function getLen(v) {
        return Math.sqrt(v.x * v.x + v.y * v.y);
    }

    function dot(v1, v2) {
        return v1.x * v2.x + v1.y * v2.y;
    }

    function getAngle(v1, v2) {
        var mr = getLen(v1) * getLen(v2);
        if (mr === 0) return 0;
        var r = dot(v1, v2) / mr;
        if (r > 1) r = 1;
        return Math.acos(r);
    }

    function cross(v1, v2) {
        return v1.x * v2.y - v2.x * v1.y;
    }

    function getRotateAngle(v1, v2) {
        var angle = getAngle(v1, v2);
        if (cross(v1, v2) > 0) {
            angle *= -1;
        }

        return angle * 180 / Math.PI;
    }

    var HandlerAdmin = function(el) {
        this.handlers = [];
        this.el = el;
    };

    HandlerAdmin.prototype.add = function(handler) {
        this.handlers.push(handler);
    }

    HandlerAdmin.prototype.del = function(handler) {
        if(!handler) this.handlers = [];

        for(var i=this.handlers.length; i>=0; i--) {
            if(this.handlers[i] === handler) {
                this.handlers.splice(i, 1);
            }
        }
    }

    HandlerAdmin.prototype.dispatch = function() {
        for(var i=0,len=this.handlers.length; i<len; i++) {
            var handler = this.handlers[i];
            if(typeof handler === 'function') handler.apply(this.el, arguments);
        }
    }

    function wrapFunc(el, handler) {
        var handlerAdmin = new HandlerAdmin(el);
        handlerAdmin.add(handler);

        return handlerAdmin;
    }

    var AlloyFinger = function (el, option) {

        this.element = typeof el == 'string' ? document.querySelector(el) : el;

        this.start = this.start.bind(this);
        this.move = this.move.bind(this);
        this.end = this.end.bind(this);
        this.cancel = this.cancel.bind(this);
        this.element.addEventListener("touchstart", this.start, false);
        this.element.addEventListener("touchmove", this.move, false);
        this.element.addEventListener("touchend", this.end, false);
        this.element.addEventListener("touchcancel", this.cancel, false);

        this.preV = { x: null, y: null };
        this.pinchStartLen = null;
        this.zoom = 1;
        this.isDoubleTap = false;

        var noop = function () { };

        this.rotate = wrapFunc(this.element, option.rotate || noop);
        this.touchStart = wrapFunc(this.element, option.touchStart || noop);
        this.multipointStart = wrapFunc(this.element, option.multipointStart || noop);
        this.multipointEnd = wrapFunc(this.element, option.multipointEnd || noop);
        this.pinch = wrapFunc(this.element, option.pinch || noop);
        this.swipe = wrapFunc(this.element, option.swipe || noop);
        this.tap = wrapFunc(this.element, option.tap || noop);
        this.doubleTap = wrapFunc(this.element, option.doubleTap || noop);
        this.longTap = wrapFunc(this.element, option.longTap || noop);
        this.singleTap = wrapFunc(this.element, option.singleTap || noop);
        this.pressMove = wrapFunc(this.element, option.pressMove || noop);
        this.twoFingerPressMove = wrapFunc(this.element, option.twoFingerPressMove || noop);
        this.touchMove = wrapFunc(this.element, option.touchMove || noop);
        this.touchEnd = wrapFunc(this.element, option.touchEnd || noop);
        this.touchCancel = wrapFunc(this.element, option.touchCancel || noop);

        this._cancelAllHandler = this.cancelAll.bind(this);

        window.addEventListener('scroll', this._cancelAllHandler);

        this.delta = null;
        this.last = null;
        this.now = null;
        this.tapTimeout = null;
        this.singleTapTimeout = null;
        this.longTapTimeout = null;
        this.swipeTimeout = null;
        this.x1 = this.x2 = this.y1 = this.y2 = null;
        this.preTapPosition = { x: null, y: null };
    };

    AlloyFinger.prototype = {
        start: function (evt) {
            if (!evt.touches) return;
            this.now = Date.now();
            this.x1 = evt.touches[0].pageX;
            this.y1 = evt.touches[0].pageY;
            this.delta = this.now - (this.last || this.now);
            this.touchStart.dispatch(evt, this.element);
            if (this.preTapPosition.x !== null) {
                this.isDoubleTap = (this.delta > 0 && this.delta <= 250 && Math.abs(this.preTapPosition.x - this.x1) < 30 && Math.abs(this.preTapPosition.y - this.y1) < 30);
                if (this.isDoubleTap) clearTimeout(self.singleTapTimeout);
            }
            this.preTapPosition.x = this.x1;
            this.preTapPosition.y = this.y1;
            this.last = this.now;
            var preV = this.preV,
                len = evt.touches.length;
            if (len > 1) {
                this._cancelLongTap();
                this._cancelSingleTap();
                var v = { x: evt.touches[1].pageX - this.x1, y: evt.touches[1].pageY - this.y1 };
                preV.x = v.x;
                preV.y = v.y;
                this.pinchStartLen = getLen(preV);
                this.multipointStart.dispatch(evt, this.element);
            }
            this._preventTap = false;
            this.longTapTimeout = setTimeout(function () {
                this.longTap.dispatch(evt, this.element);
                this._preventTap = true;
            }.bind(this), 750);
        },
        move: function (evt) {
            if (!evt.touches) return;
            var preV = this.preV,
                len = evt.touches.length,
                currentX = evt.touches[0].pageX,
                currentY = evt.touches[0].pageY;
            this.isDoubleTap = false;
            if (len > 1) {
                var sCurrentX = evt.touches[1].pageX,
                    sCurrentY = evt.touches[1].pageY
                var v = { x: evt.touches[1].pageX - currentX, y: evt.touches[1].pageY - currentY };

                if (preV.x !== null) {
                    if (this.pinchStartLen > 0) {
                        evt.zoom = getLen(v) / this.pinchStartLen;
                        this.pinch.dispatch(evt, this.element);
                    }

                    evt.angle = getRotateAngle(v, preV);
                    this.rotate.dispatch(evt, this.element);
                }
                preV.x = v.x;
                preV.y = v.y;

                if (this.x2 !== null && this.sx2 !== null) {
                    evt.deltaX = (currentX - this.x2 + sCurrentX - this.sx2) / 2;
                    evt.deltaY = (currentY - this.y2 + sCurrentY - this.sy2) / 2;
                } else {
                    evt.deltaX = 0;
                    evt.deltaY = 0;
                }
                this.twoFingerPressMove.dispatch(evt, this.element);

                this.sx2 = sCurrentX;
                this.sy2 = sCurrentY;
            } else {
                if (this.x2 !== null) {
                    evt.deltaX = currentX - this.x2;
                    evt.deltaY = currentY - this.y2;

                } else {
                    evt.deltaX = 0;
                    evt.deltaY = 0;
                }


                this.pressMove.dispatch(evt, this.element);
            }

            this.touchMove.dispatch(evt, this.element);

            this._cancelLongTap();
            this.x2 = currentX;
            this.y2 = currentY;

            if (len > 1) {
                evt.preventDefault();
            }
        },
        end: function (evt) {
            if (!evt.changedTouches) return;
            this._cancelLongTap();
            var self = this;
            if (evt.touches.length < 2) {
                this.multipointEnd.dispatch(evt, this.element);
                this.sx2 = this.sy2 = null;
            }

            //swipe
            if ((this.x2 && Math.abs(this.x1 - this.x2) > 30) ||
                (this.y2 && Math.abs(this.y1 - this.y2) > 30)) {
                evt.direction = this._swipeDirection(this.x1, this.x2, this.y1, this.y2);
                this.swipeTimeout = setTimeout(function () {
                    self.swipe.dispatch(evt, self.element);

                }, 0)
            } else {
                this.tapTimeout = setTimeout(function () {
                    if(!self._preventTap){
                        self.tap.dispatch(evt, self.element);
                    }
                    // trigger double tap immediately
                    if (self.isDoubleTap) {
                        self.doubleTap.dispatch(evt, self.element);
                        self.isDoubleTap = false;
                    }
                }, 0)

                if (!self.isDoubleTap) {
                    self.singleTapTimeout = setTimeout(function () {
                        self.singleTap.dispatch(evt, self.element);
                    }, 250);
                }
            }

            this.touchEnd.dispatch(evt, this.element);

            this.preV.x = 0;
            this.preV.y = 0;
            this.zoom = 1;
            this.pinchStartLen = null;
            this.x1 = this.x2 = this.y1 = this.y2 = null;
        },
        cancelAll: function () {
            this._preventTap = true
            clearTimeout(this.singleTapTimeout);
            clearTimeout(this.tapTimeout);
            clearTimeout(this.longTapTimeout);
            clearTimeout(this.swipeTimeout);
        },
        cancel: function (evt) {
            this.cancelAll()
            this.touchCancel.dispatch(evt, this.element);
        },
        _cancelLongTap: function () {
            clearTimeout(this.longTapTimeout);
        },
        _cancelSingleTap: function () {
            clearTimeout(this.singleTapTimeout);
        },
        _swipeDirection: function (x1, x2, y1, y2) {
            return Math.abs(x1 - x2) >= Math.abs(y1 - y2) ? (x1 - x2 > 0 ? 'Left' : 'Right') : (y1 - y2 > 0 ? 'Up' : 'Down')
        },

        on: function(evt, handler) {
            if(this[evt]) {
                this[evt].add(handler);
            }
        },

        off: function(evt, handler) {
            if(this[evt]) {
                this[evt].del(handler);
            }
        },

        destroy: function() {
            if(this.singleTapTimeout) clearTimeout(this.singleTapTimeout);
            if(this.tapTimeout) clearTimeout(this.tapTimeout);
            if(this.longTapTimeout) clearTimeout(this.longTapTimeout);
            if(this.swipeTimeout) clearTimeout(this.swipeTimeout);

            this.element.removeEventListener("touchstart", this.start);
            this.element.removeEventListener("touchmove", this.move);
            this.element.removeEventListener("touchend", this.end);
            this.element.removeEventListener("touchcancel", this.cancel);

            this.rotate.del();
            this.touchStart.del();
            this.multipointStart.del();
            this.multipointEnd.del();
            this.pinch.del();
            this.swipe.del();
            this.tap.del();
            this.doubleTap.del();
            this.longTap.del();
            this.singleTap.del();
            this.pressMove.del();
            this.twoFingerPressMove.del()
            this.touchMove.del();
            this.touchEnd.del();
            this.touchCancel.del();

            this.preV = this.pinchStartLen = this.zoom = this.isDoubleTap = this.delta = this.last = this.now = this.tapTimeout = this.singleTapTimeout = this.longTapTimeout = this.swipeTimeout = this.x1 = this.x2 = this.y1 = this.y2 = this.preTapPosition = this.rotate = this.touchStart = this.multipointStart = this.multipointEnd = this.pinch = this.swipe = this.tap = this.doubleTap = this.longTap = this.singleTap = this.pressMove = this.touchMove = this.touchEnd = this.touchCancel = this.twoFingerPressMove = null;

            window.removeEventListener('scroll', this._cancelAllHandler);
            return null;
        }
    };

    if (typeof module !== 'undefined' && typeof exports === 'object') {
        module.exports = AlloyFinger;
    } else {
        window.AlloyFinger = AlloyFinger;
    }
})();



/* transformjs
 * By dntzhang
 * Github: https://github.com/AlloyTeam/AlloyTouch/tree/master/transformjs
 */
;(function () {

    var Matrix3D = function (n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {
        this.elements =window.Float32Array ? new Float32Array(16) : [];
        var te = this.elements;
        te[0] = (n11 !== undefined) ? n11 : 1; te[4] = n12 || 0; te[8] = n13 || 0; te[12] = n14 || 0;
        te[1] = n21 || 0; te[5] = (n22 !== undefined) ? n22 : 1; te[9] = n23 || 0; te[13] = n24 || 0;
        te[2] = n31 || 0; te[6] = n32 || 0; te[10] = (n33 !== undefined) ? n33 : 1; te[14] = n34 || 0;
        te[3] = n41 || 0; te[7] = n42 || 0; te[11] = n43 || 0; te[15] = (n44 !== undefined) ? n44 : 1;
    };

    Matrix3D.DEG_TO_RAD = Math.PI / 180;

    Matrix3D.prototype = {
        set: function (n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {
            var te = this.elements;
            te[0] = n11; te[4] = n12; te[8] = n13; te[12] = n14;
            te[1] = n21; te[5] = n22; te[9] = n23; te[13] = n24;
            te[2] = n31; te[6] = n32; te[10] = n33; te[14] = n34;
            te[3] = n41; te[7] = n42; te[11] = n43; te[15] = n44;
            return this;
        },
        identity: function () {
            this.set(
                1, 0, 0, 0,
                0, 1, 0, 0,
                0, 0, 1, 0,
                0, 0, 0, 1
            );
            return this;
        },
        multiplyMatrices: function (a, be) {

            var ae = a.elements;
            var te = this.elements;
            var a11 = ae[0], a12 = ae[4], a13 = ae[8], a14 = ae[12];
            var a21 = ae[1], a22 = ae[5], a23 = ae[9], a24 = ae[13];
            var a31 = ae[2], a32 = ae[6], a33 = ae[10], a34 = ae[14];
            var a41 = ae[3], a42 = ae[7], a43 = ae[11], a44 = ae[15];

            var b11 = be[0], b12 = be[1], b13 = be[2], b14 = be[3];
            var b21 = be[4], b22 = be[5], b23 = be[6], b24 = be[7];
            var b31 = be[8], b32 = be[9], b33 = be[10], b34 = be[11];
            var b41 = be[12], b42 = be[13], b43 = be[14], b44 = be[15];

            te[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;
            te[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;
            te[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;
            te[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;

            te[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;
            te[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;
            te[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;
            te[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;

            te[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;
            te[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;
            te[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;
            te[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;

            te[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;
            te[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;
            te[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;
            te[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;

            return this;

        },
        // 解决角度为90的整数倍导致Math.cos得到极小的数，其实是0。导致不渲染
        _rounded: function(value,i){
            i= Math.pow(10, i || 15);
            // default
            return Math.round(value*i)/i;
        },
        appendTransform: function (x, y, z, scaleX, scaleY, scaleZ, rotateX, rotateY, rotateZ,skewX,skewY, originX, originY, originZ) {

            var rx = rotateX * Matrix3D.DEG_TO_RAD;
            var cosx =this._rounded( Math.cos(rx));
            var sinx = this._rounded(Math.sin(rx));
            var ry = rotateY * Matrix3D.DEG_TO_RAD;
            var cosy =this._rounded( Math.cos(ry));
            var siny = this._rounded(Math.sin(ry));
            var rz = rotateZ * Matrix3D.DEG_TO_RAD;
            var cosz =this._rounded( Math.cos(rz * -1));
            var sinz =this._rounded( Math.sin(rz * -1));

            this.multiplyMatrices(this, [
                1, 0, 0, x,
                0, cosx, sinx, y,
                0, -sinx, cosx, z,
                0, 0, 0, 1
            ]);

            this.multiplyMatrices(this, [
                cosy, 0, siny, 0,
                0, 1, 0, 0,
                -siny, 0, cosy, 0,
                0, 0, 0, 1
            ]);

            this.multiplyMatrices(this,[
                cosz * scaleX, sinz * scaleY, 0, 0,
                -sinz * scaleX, cosz * scaleY, 0, 0,
                0, 0, 1 * scaleZ, 0,
                0, 0, 0, 1
            ]);

            if(skewX||skewY){
                this.multiplyMatrices(this,[
                    this._rounded(Math.cos(skewX* Matrix3D.DEG_TO_RAD)), this._rounded( Math.sin(skewX* Matrix3D.DEG_TO_RAD)), 0, 0,
                    -1*this._rounded(Math.sin(skewY* Matrix3D.DEG_TO_RAD)), this._rounded( Math.cos(skewY* Matrix3D.DEG_TO_RAD)), 0, 0,
                    0, 0, 1, 0,
                    0, 0, 0, 1
                ]);
            }

            if (originX || originY || originZ) {
                this.elements[12] -= originX * this.elements[0] + originY * this.elements[4] + originZ * this.elements[8];
                this.elements[13] -= originX * this.elements[1] + originY * this.elements[5] + originZ * this.elements[9];
                this.elements[14] -= originX * this.elements[2] + originY * this.elements[6] + originZ * this.elements[10];
            }
            return this;
        }
    };

    function observe(target, props, callback) {
        for (var i = 0, len = props.length; i < len; i++) {
            var prop = props[i];
            watch(target, prop, callback);
        }
    }

    function watch(target, prop, callback) {
        Object.defineProperty(target, prop, {
            get: function () {
                return this["__" + prop];
            },
            set: function (value) {
                if (value !== this["__" + prop]) {
                    this["__" + prop] = value;
                    callback();
                }

            }
        });
    }

    window.Transform = function (element,notPerspective) {

        observe(
            element,
            ["translateX", "translateY", "translateZ", "scaleX", "scaleY", "scaleZ", "rotateX", "rotateY", "rotateZ", "skewX", "skewY", "originX", "originY", "originZ"],
            function () {
                var mtx = element.matrix3D.identity().appendTransform(element.translateX, element.translateY, element.translateZ, element.scaleX, element.scaleY, element.scaleZ, element.rotateX, element.rotateY, element.rotateZ, element.skewX, element.skewY, element.originX, element.originY, element.originZ);
                element.style.transform = element.style.msTransform = element.style.OTransform = element.style.MozTransform = element.style.webkitTransform =(notPerspective?"":"perspective(" + (element.perspective===undefined?500:element.perspective) + "px) ")+ "matrix3d(" + Array.prototype.slice.call(mtx.elements).join(",") + ")";
            });

        element.matrix3D = new Matrix3D();

        if (!notPerspective) {
            observe(
                element,
                ["perspective"],
                function () {
                    element.style.transform = element.style.msTransform = element.style.OTransform = element.style.MozTransform = element.style.webkitTransform = "perspective(" + element.perspective + "px) matrix3d(" + Array.prototype.slice.call(element.matrix3D.elements).join(",") + ")";
                });
            element.perspective = 500;
        }

        element.scaleX = element.scaleY = element.scaleZ = 1;
        //由于image自带了x\y\z，所有加上translate前缀
        element.translateX = element.translateY = element.translateZ = element.rotateX = element.rotateY = element.rotateZ = element.skewX = element.skewY = element.originX = element.originY = element.originZ = 0;
    }
})();
